// Mocks generated by Mockito 5.4.4 from annotations
// in my_movie_search/test/web_fetch_classes/web_fetch_child_classes/search/mssearch_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:meilisearch/meilisearch.dart' as _i3;
import 'package:meilisearch/src/http_request.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHttpRequest_0 extends _i1.SmartFake implements _i2.HttpRequest {
  _FakeHttpRequest_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMeiliSearchIndex_1 extends _i1.SmartFake
    implements _i3.MeiliSearchIndex {
  _FakeMeiliSearchIndex_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTask_2 extends _i1.SmartFake implements _i3.Task {
  _FakeTask_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResult_3<T> extends _i1.SmartFake implements _i3.Result<T> {
  _FakeResult_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeKey_4 extends _i1.SmartFake implements _i3.Key {
  _FakeKey_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAllStats_5 extends _i1.SmartFake implements _i3.AllStats {
  _FakeAllStats_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTasksResults_6 extends _i1.SmartFake implements _i3.TasksResults {
  _FakeTasksResults_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultiSearchResult_7 extends _i1.SmartFake
    implements _i3.MultiSearchResult {
  _FakeMultiSearchResult_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMeiliSearchClient_8 extends _i1.SmartFake
    implements _i3.MeiliSearchClient {
  _FakeMeiliSearchClient_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSearcheable_9<T> extends _i1.SmartFake
    implements _i3.Searcheable<T> {
  _FakeSearcheable_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFacetSearchResult_10 extends _i1.SmartFake
    implements _i3.FacetSearchResult {
  _FakeFacetSearchResult_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIndexSettings_11 extends _i1.SmartFake implements _i3.IndexSettings {
  _FakeIndexSettings_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTypoTolerance_12 extends _i1.SmartFake implements _i3.TypoTolerance {
  _FakeTypoTolerance_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePagination_13 extends _i1.SmartFake implements _i3.Pagination {
  _FakePagination_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFaceting_14 extends _i1.SmartFake implements _i3.Faceting {
  _FakeFaceting_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIndexStats_15 extends _i1.SmartFake implements _i3.IndexStats {
  _FakeIndexStats_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePaginatedSearchResult_16<T1> extends _i1.SmartFake
    implements _i3.PaginatedSearchResult<T1> {
  _FakePaginatedSearchResult_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSearchResult_17<T1> extends _i1.SmartFake
    implements _i3.SearchResult<T1> {
  _FakeSearchResult_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MeiliSearchClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockMeiliSearchClient extends _i1.Mock implements _i3.MeiliSearchClient {
  MockMeiliSearchClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get serverUrl => (super.noSuchMethod(
        Invocation.getter(#serverUrl),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#serverUrl),
        ),
      ) as String);

  @override
  _i2.HttpRequest get http => (super.noSuchMethod(
        Invocation.getter(#http),
        returnValue: _FakeHttpRequest_0(
          this,
          Invocation.getter(#http),
        ),
      ) as _i2.HttpRequest);

  @override
  _i3.MeiliSearchIndex index(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #index,
          [uid],
        ),
        returnValue: _FakeMeiliSearchIndex_1(
          this,
          Invocation.method(
            #index,
            [uid],
          ),
        ),
      ) as _i3.MeiliSearchIndex);

  @override
  _i5.Future<_i3.Task> createIndex(
    String? uid, {
    String? primaryKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createIndex,
          [uid],
          {#primaryKey: primaryKey},
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #createIndex,
            [uid],
            {#primaryKey: primaryKey},
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.MeiliSearchIndex> getIndex(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #getIndex,
          [uid],
        ),
        returnValue:
            _i5.Future<_i3.MeiliSearchIndex>.value(_FakeMeiliSearchIndex_1(
          this,
          Invocation.method(
            #getIndex,
            [uid],
          ),
        )),
      ) as _i5.Future<_i3.MeiliSearchIndex>);

  @override
  _i5.Future<Map<String, Object?>> getRawIndex(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRawIndex,
          [uid],
        ),
        returnValue:
            _i5.Future<Map<String, Object?>>.value(<String, Object?>{}),
      ) as _i5.Future<Map<String, Object?>>);

  @override
  _i5.Future<_i3.Result<_i3.MeiliSearchIndex>> getIndexes(
          {_i3.IndexesQuery? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIndexes,
          [],
          {#params: params},
        ),
        returnValue: _i5.Future<_i3.Result<_i3.MeiliSearchIndex>>.value(
            _FakeResult_3<_i3.MeiliSearchIndex>(
          this,
          Invocation.method(
            #getIndexes,
            [],
            {#params: params},
          ),
        )),
      ) as _i5.Future<_i3.Result<_i3.MeiliSearchIndex>>);

  @override
  _i5.Future<_i3.Task> deleteIndex(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #deleteIndex,
          [uid],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #deleteIndex,
            [uid],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> updateIndex(
    String? uid,
    String? primaryKey,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateIndex,
          [
            uid,
            primaryKey,
          ],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #updateIndex,
            [
              uid,
              primaryKey,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> swapIndexes(List<_i3.SwapIndex>? param) =>
      (super.noSuchMethod(
        Invocation.method(
          #swapIndexes,
          [param],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #swapIndexes,
            [param],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<Map<String, dynamic>> health() => (super.noSuchMethod(
        Invocation.method(
          #health,
          [],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<bool> isHealthy() => (super.noSuchMethod(
        Invocation.method(
          #isHealthy,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<_i3.Task> createDump() => (super.noSuchMethod(
        Invocation.method(
          #createDump,
          [],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #createDump,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Result<_i3.Key>> getKeys({_i3.KeysQuery? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [],
          {#params: params},
        ),
        returnValue:
            _i5.Future<_i3.Result<_i3.Key>>.value(_FakeResult_3<_i3.Key>(
          this,
          Invocation.method(
            #getKeys,
            [],
            {#params: params},
          ),
        )),
      ) as _i5.Future<_i3.Result<_i3.Key>>);

  @override
  _i5.Future<_i3.Key> getKey(String? keyOrUid) => (super.noSuchMethod(
        Invocation.method(
          #getKey,
          [keyOrUid],
        ),
        returnValue: _i5.Future<_i3.Key>.value(_FakeKey_4(
          this,
          Invocation.method(
            #getKey,
            [keyOrUid],
          ),
        )),
      ) as _i5.Future<_i3.Key>);

  @override
  _i5.Future<Map<String, String>> getVersion() => (super.noSuchMethod(
        Invocation.method(
          #getVersion,
          [],
        ),
        returnValue: _i5.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i5.Future<Map<String, String>>);

  @override
  _i5.Future<_i3.AllStats> getStats() => (super.noSuchMethod(
        Invocation.method(
          #getStats,
          [],
        ),
        returnValue: _i5.Future<_i3.AllStats>.value(_FakeAllStats_5(
          this,
          Invocation.method(
            #getStats,
            [],
          ),
        )),
      ) as _i5.Future<_i3.AllStats>);

  @override
  _i5.Future<_i3.Key> createKey({
    DateTime? expiresAt,
    String? description,
    String? uid,
    required List<String>? indexes,
    required List<String>? actions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createKey,
          [],
          {
            #expiresAt: expiresAt,
            #description: description,
            #uid: uid,
            #indexes: indexes,
            #actions: actions,
          },
        ),
        returnValue: _i5.Future<_i3.Key>.value(_FakeKey_4(
          this,
          Invocation.method(
            #createKey,
            [],
            {
              #expiresAt: expiresAt,
              #description: description,
              #uid: uid,
              #indexes: indexes,
              #actions: actions,
            },
          ),
        )),
      ) as _i5.Future<_i3.Key>);

  @override
  _i5.Future<_i3.Key> updateKey(
    String? key, {
    String? name,
    String? description,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateKey,
          [key],
          {
            #name: name,
            #description: description,
          },
        ),
        returnValue: _i5.Future<_i3.Key>.value(_FakeKey_4(
          this,
          Invocation.method(
            #updateKey,
            [key],
            {
              #name: name,
              #description: description,
            },
          ),
        )),
      ) as _i5.Future<_i3.Key>);

  @override
  _i5.Future<bool> deleteKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #deleteKey,
          [key],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  String generateTenantToken(
    String? uid,
    Object? searchRules, {
    String? apiKey,
    DateTime? expiresAt,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateTenantToken,
          [
            uid,
            searchRules,
          ],
          {
            #apiKey: apiKey,
            #expiresAt: expiresAt,
          },
        ),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.method(
            #generateTenantToken,
            [
              uid,
              searchRules,
            ],
            {
              #apiKey: apiKey,
              #expiresAt: expiresAt,
            },
          ),
        ),
      ) as String);

  @override
  _i5.Future<_i3.TasksResults> getTasks({_i3.TasksQuery? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTasks,
          [],
          {#params: params},
        ),
        returnValue: _i5.Future<_i3.TasksResults>.value(_FakeTasksResults_6(
          this,
          Invocation.method(
            #getTasks,
            [],
            {#params: params},
          ),
        )),
      ) as _i5.Future<_i3.TasksResults>);

  @override
  _i5.Future<_i3.Task> cancelTasks({_i3.CancelTasksQuery? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #cancelTasks,
          [],
          {#params: params},
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #cancelTasks,
            [],
            {#params: params},
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> deleteTasks({_i3.DeleteTasksQuery? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTasks,
          [],
          {#params: params},
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #deleteTasks,
            [],
            {#params: params},
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> getTask(int? uid) => (super.noSuchMethod(
        Invocation.method(
          #getTask,
          [uid],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #getTask,
            [uid],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.MultiSearchResult> multiSearch(_i3.MultiSearchQuery? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #multiSearch,
          [query],
        ),
        returnValue:
            _i5.Future<_i3.MultiSearchResult>.value(_FakeMultiSearchResult_7(
          this,
          Invocation.method(
            #multiSearch,
            [query],
          ),
        )),
      ) as _i5.Future<_i3.MultiSearchResult>);
}

/// A class which mocks [MeiliSearchIndex].
///
/// See the documentation for Mockito's code generation for more information.
class MockMeiliSearchIndex extends _i1.Mock implements _i3.MeiliSearchIndex {
  MockMeiliSearchIndex() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.MeiliSearchClient get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeMeiliSearchClient_8(
          this,
          Invocation.getter(#client),
        ),
      ) as _i3.MeiliSearchClient);

  @override
  String get uid => (super.noSuchMethod(
        Invocation.getter(#uid),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#uid),
        ),
      ) as String);

  @override
  set primaryKey(String? _primaryKey) => super.noSuchMethod(
        Invocation.setter(
          #primaryKey,
          _primaryKey,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.HttpRequest get http => (super.noSuchMethod(
        Invocation.getter(#http),
        returnValue: _FakeHttpRequest_0(
          this,
          Invocation.getter(#http),
        ),
      ) as _i2.HttpRequest);

  @override
  _i5.Future<_i3.Task> update({String? primaryKey}) => (super.noSuchMethod(
        Invocation.method(
          #update,
          [],
          {#primaryKey: primaryKey},
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #update,
            [],
            {#primaryKey: primaryKey},
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #delete,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.MeiliSearchIndex> fetchInfo() => (super.noSuchMethod(
        Invocation.method(
          #fetchInfo,
          [],
        ),
        returnValue:
            _i5.Future<_i3.MeiliSearchIndex>.value(_FakeMeiliSearchIndex_1(
          this,
          Invocation.method(
            #fetchInfo,
            [],
          ),
        )),
      ) as _i5.Future<_i3.MeiliSearchIndex>);

  @override
  _i5.Future<String?> fetchPrimaryKey() => (super.noSuchMethod(
        Invocation.method(
          #fetchPrimaryKey,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<_i3.Searcheable<Map<String, dynamic>>> search(
    String? text, [
    _i3.SearchQuery? q,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [
            text,
            q,
          ],
        ),
        returnValue: _i5.Future<_i3.Searcheable<Map<String, dynamic>>>.value(
            _FakeSearcheable_9<Map<String, dynamic>>(
          this,
          Invocation.method(
            #search,
            [
              text,
              q,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Searcheable<Map<String, dynamic>>>);

  @override
  _i5.Future<_i3.FacetSearchResult> facetSearch(_i3.FacetSearchQuery? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #facetSearch,
          [query],
        ),
        returnValue:
            _i5.Future<_i3.FacetSearchResult>.value(_FakeFacetSearchResult_10(
          this,
          Invocation.method(
            #facetSearch,
            [query],
          ),
        )),
      ) as _i5.Future<_i3.FacetSearchResult>);

  @override
  _i5.Future<_i3.Task> addDocuments(
    List<Map<String, Object?>>? documents, {
    String? primaryKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addDocuments,
          [documents],
          {#primaryKey: primaryKey},
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #addDocuments,
            [documents],
            {#primaryKey: primaryKey},
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> addDocumentsJson(
    String? documents, {
    String? primaryKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addDocumentsJson,
          [documents],
          {#primaryKey: primaryKey},
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #addDocumentsJson,
            [documents],
            {#primaryKey: primaryKey},
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> addDocumentsCsv(
    String? documents, {
    String? primaryKey,
    String? csvDelimiter,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addDocumentsCsv,
          [documents],
          {
            #primaryKey: primaryKey,
            #csvDelimiter: csvDelimiter,
          },
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #addDocumentsCsv,
            [documents],
            {
              #primaryKey: primaryKey,
              #csvDelimiter: csvDelimiter,
            },
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> addDocumentsNdjson(
    String? documents, {
    String? primaryKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addDocumentsNdjson,
          [documents],
          {#primaryKey: primaryKey},
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #addDocumentsNdjson,
            [documents],
            {#primaryKey: primaryKey},
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<List<_i3.Task>> addDocumentsInBatches(
    List<Map<String, dynamic>>? documents, {
    int? batchSize = 1000,
    String? primaryKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addDocumentsInBatches,
          [documents],
          {
            #batchSize: batchSize,
            #primaryKey: primaryKey,
          },
        ),
        returnValue: _i5.Future<List<_i3.Task>>.value(<_i3.Task>[]),
      ) as _i5.Future<List<_i3.Task>>);

  @override
  _i5.Future<List<_i3.Task>> addDocumentsCsvInBatches(
    String? documents, {
    String? primaryKey,
    int? batchSize = 1000,
    String? csvDelimiter,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addDocumentsCsvInBatches,
          [documents],
          {
            #primaryKey: primaryKey,
            #batchSize: batchSize,
            #csvDelimiter: csvDelimiter,
          },
        ),
        returnValue: _i5.Future<List<_i3.Task>>.value(<_i3.Task>[]),
      ) as _i5.Future<List<_i3.Task>>);

  @override
  _i5.Future<List<_i3.Task>> addDocumentsNdjsonInBatches(
    String? documents, {
    String? primaryKey,
    int? batchSize = 1000,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addDocumentsNdjsonInBatches,
          [documents],
          {
            #primaryKey: primaryKey,
            #batchSize: batchSize,
          },
        ),
        returnValue: _i5.Future<List<_i3.Task>>.value(<_i3.Task>[]),
      ) as _i5.Future<List<_i3.Task>>);

  @override
  _i5.Future<_i3.Task> updateDocuments(
    List<Map<String, Object?>>? documents, {
    String? primaryKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDocuments,
          [documents],
          {#primaryKey: primaryKey},
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #updateDocuments,
            [documents],
            {#primaryKey: primaryKey},
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> updateDocumentsJson(
    String? documents, {
    String? primaryKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDocumentsJson,
          [documents],
          {#primaryKey: primaryKey},
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #updateDocumentsJson,
            [documents],
            {#primaryKey: primaryKey},
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> updateDocumentsCsv(
    String? documents, {
    String? primaryKey,
    String? csvDelimiter,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDocumentsCsv,
          [documents],
          {
            #primaryKey: primaryKey,
            #csvDelimiter: csvDelimiter,
          },
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #updateDocumentsCsv,
            [documents],
            {
              #primaryKey: primaryKey,
              #csvDelimiter: csvDelimiter,
            },
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> updateDocumentsNdjson(
    String? documents, {
    String? primaryKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDocumentsNdjson,
          [documents],
          {#primaryKey: primaryKey},
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #updateDocumentsNdjson,
            [documents],
            {#primaryKey: primaryKey},
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<List<_i3.Task>> updateDocumentsInBatches(
    List<Map<String, Object?>>? documents, {
    int? batchSize = 1000,
    String? primaryKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDocumentsInBatches,
          [documents],
          {
            #batchSize: batchSize,
            #primaryKey: primaryKey,
          },
        ),
        returnValue: _i5.Future<List<_i3.Task>>.value(<_i3.Task>[]),
      ) as _i5.Future<List<_i3.Task>>);

  @override
  _i5.Future<List<_i3.Task>> updateDocumentsCsvInBatches(
    String? documents, {
    String? primaryKey,
    int? batchSize = 1000,
    String? csvDelimiter,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDocumentsCsvInBatches,
          [documents],
          {
            #primaryKey: primaryKey,
            #batchSize: batchSize,
            #csvDelimiter: csvDelimiter,
          },
        ),
        returnValue: _i5.Future<List<_i3.Task>>.value(<_i3.Task>[]),
      ) as _i5.Future<List<_i3.Task>>);

  @override
  _i5.Future<List<_i3.Task>> updateDocumentsNdjsonInBatches(
    String? documents, {
    String? primaryKey,
    int? batchSize = 1000,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDocumentsNdjsonInBatches,
          [documents],
          {
            #primaryKey: primaryKey,
            #batchSize: batchSize,
          },
        ),
        returnValue: _i5.Future<List<_i3.Task>>.value(<_i3.Task>[]),
      ) as _i5.Future<List<_i3.Task>>);

  @override
  _i5.Future<_i3.Task> deleteAllDocuments() => (super.noSuchMethod(
        Invocation.method(
          #deleteAllDocuments,
          [],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #deleteAllDocuments,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> deleteDocument(Object? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteDocument,
          [id],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #deleteDocument,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> deleteDocuments(_i3.DeleteDocumentsQuery? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteDocuments,
          [query],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #deleteDocuments,
            [query],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<Map<String, dynamic>?> getDocument(
    Object? id, {
    List<String>? fields = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDocument,
          [id],
          {#fields: fields},
        ),
        returnValue: _i5.Future<Map<String, dynamic>?>.value(),
      ) as _i5.Future<Map<String, dynamic>?>);

  @override
  _i5.Future<_i3.Result<Map<String, dynamic>>> getDocuments(
          {_i3.DocumentsQuery? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDocuments,
          [],
          {#params: params},
        ),
        returnValue: _i5.Future<_i3.Result<Map<String, dynamic>>>.value(
            _FakeResult_3<Map<String, dynamic>>(
          this,
          Invocation.method(
            #getDocuments,
            [],
            {#params: params},
          ),
        )),
      ) as _i5.Future<_i3.Result<Map<String, dynamic>>>);

  @override
  _i5.Future<_i3.IndexSettings> getSettings() => (super.noSuchMethod(
        Invocation.method(
          #getSettings,
          [],
        ),
        returnValue: _i5.Future<_i3.IndexSettings>.value(_FakeIndexSettings_11(
          this,
          Invocation.method(
            #getSettings,
            [],
          ),
        )),
      ) as _i5.Future<_i3.IndexSettings>);

  @override
  _i5.Future<_i3.Task> resetSettings() => (super.noSuchMethod(
        Invocation.method(
          #resetSettings,
          [],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #resetSettings,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> updateSettings(_i3.IndexSettings? settings) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSettings,
          [settings],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #updateSettings,
            [settings],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<List<String>> getFilterableAttributes() => (super.noSuchMethod(
        Invocation.method(
          #getFilterableAttributes,
          [],
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);

  @override
  _i5.Future<_i3.Task> resetFilterableAttributes() => (super.noSuchMethod(
        Invocation.method(
          #resetFilterableAttributes,
          [],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #resetFilterableAttributes,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> updateFilterableAttributes(
          List<String>? filterableAttributes) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateFilterableAttributes,
          [filterableAttributes],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #updateFilterableAttributes,
            [filterableAttributes],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<List<String>> getDisplayedAttributes() => (super.noSuchMethod(
        Invocation.method(
          #getDisplayedAttributes,
          [],
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);

  @override
  _i5.Future<_i3.Task> resetDisplayedAttributes() => (super.noSuchMethod(
        Invocation.method(
          #resetDisplayedAttributes,
          [],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #resetDisplayedAttributes,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> updateDisplayedAttributes(
          List<String>? displayedAttributes) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDisplayedAttributes,
          [displayedAttributes],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #updateDisplayedAttributes,
            [displayedAttributes],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<String?> getDistinctAttribute() => (super.noSuchMethod(
        Invocation.method(
          #getDistinctAttribute,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<_i3.Task> resetDistinctAttribute() => (super.noSuchMethod(
        Invocation.method(
          #resetDistinctAttribute,
          [],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #resetDistinctAttribute,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> updateDistinctAttribute(String? distinctAttribute) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDistinctAttribute,
          [distinctAttribute],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #updateDistinctAttribute,
            [distinctAttribute],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<List<String>> getRankingRules() => (super.noSuchMethod(
        Invocation.method(
          #getRankingRules,
          [],
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);

  @override
  _i5.Future<_i3.Task> resetRankingRules() => (super.noSuchMethod(
        Invocation.method(
          #resetRankingRules,
          [],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #resetRankingRules,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> updateRankingRules(List<String>? rankingRules) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateRankingRules,
          [rankingRules],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #updateRankingRules,
            [rankingRules],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<List<String>> getSeparatorTokens() => (super.noSuchMethod(
        Invocation.method(
          #getSeparatorTokens,
          [],
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);

  @override
  _i5.Future<_i3.Task> resetSeparatorTokens() => (super.noSuchMethod(
        Invocation.method(
          #resetSeparatorTokens,
          [],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #resetSeparatorTokens,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> updateSeparatorTokens(List<String>? separatorTokens) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSeparatorTokens,
          [separatorTokens],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #updateSeparatorTokens,
            [separatorTokens],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<List<String>> getNonSeparatorTokens() => (super.noSuchMethod(
        Invocation.method(
          #getNonSeparatorTokens,
          [],
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);

  @override
  _i5.Future<_i3.Task> resetNonSeparatorTokens() => (super.noSuchMethod(
        Invocation.method(
          #resetNonSeparatorTokens,
          [],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #resetNonSeparatorTokens,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> updateNonSeparatorTokens(
          List<String>? nonSeparatorTokens) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateNonSeparatorTokens,
          [nonSeparatorTokens],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #updateNonSeparatorTokens,
            [nonSeparatorTokens],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<List<String>> getSearchableAttributes() => (super.noSuchMethod(
        Invocation.method(
          #getSearchableAttributes,
          [],
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);

  @override
  _i5.Future<_i3.Task> resetSearchableAttributes() => (super.noSuchMethod(
        Invocation.method(
          #resetSearchableAttributes,
          [],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #resetSearchableAttributes,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> updateSearchableAttributes(
          List<String>? searchableAttributes) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSearchableAttributes,
          [searchableAttributes],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #updateSearchableAttributes,
            [searchableAttributes],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<List<String>> getStopWords() => (super.noSuchMethod(
        Invocation.method(
          #getStopWords,
          [],
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);

  @override
  _i5.Future<_i3.Task> resetStopWords() => (super.noSuchMethod(
        Invocation.method(
          #resetStopWords,
          [],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #resetStopWords,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> updateStopWords(List<String>? stopWords) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateStopWords,
          [stopWords],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #updateStopWords,
            [stopWords],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<Map<String, List<String>>> getSynonyms() => (super.noSuchMethod(
        Invocation.method(
          #getSynonyms,
          [],
        ),
        returnValue: _i5.Future<Map<String, List<String>>>.value(
            <String, List<String>>{}),
      ) as _i5.Future<Map<String, List<String>>>);

  @override
  _i5.Future<_i3.Task> resetSynonyms() => (super.noSuchMethod(
        Invocation.method(
          #resetSynonyms,
          [],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #resetSynonyms,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> updateSynonyms(Map<String, List<String>>? synonyms) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSynonyms,
          [synonyms],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #updateSynonyms,
            [synonyms],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<List<String>> getSortableAttributes() => (super.noSuchMethod(
        Invocation.method(
          #getSortableAttributes,
          [],
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);

  @override
  _i5.Future<_i3.Task> resetSortableAttributes() => (super.noSuchMethod(
        Invocation.method(
          #resetSortableAttributes,
          [],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #resetSortableAttributes,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> updateSortableAttributes(
          List<String>? sortableAttributes) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSortableAttributes,
          [sortableAttributes],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #updateSortableAttributes,
            [sortableAttributes],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.TypoTolerance> getTypoTolerance() => (super.noSuchMethod(
        Invocation.method(
          #getTypoTolerance,
          [],
        ),
        returnValue: _i5.Future<_i3.TypoTolerance>.value(_FakeTypoTolerance_12(
          this,
          Invocation.method(
            #getTypoTolerance,
            [],
          ),
        )),
      ) as _i5.Future<_i3.TypoTolerance>);

  @override
  _i5.Future<_i3.Task> resetTypoTolerance() => (super.noSuchMethod(
        Invocation.method(
          #resetTypoTolerance,
          [],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #resetTypoTolerance,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> updateTypoTolerance(_i3.TypoTolerance? typoTolerance) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTypoTolerance,
          [typoTolerance],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #updateTypoTolerance,
            [typoTolerance],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Pagination> getPagination() => (super.noSuchMethod(
        Invocation.method(
          #getPagination,
          [],
        ),
        returnValue: _i5.Future<_i3.Pagination>.value(_FakePagination_13(
          this,
          Invocation.method(
            #getPagination,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Pagination>);

  @override
  _i5.Future<_i3.Task> resetPagination() => (super.noSuchMethod(
        Invocation.method(
          #resetPagination,
          [],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #resetPagination,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> updatePagination(_i3.Pagination? pagination) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePagination,
          [pagination],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #updatePagination,
            [pagination],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Faceting> getFaceting() => (super.noSuchMethod(
        Invocation.method(
          #getFaceting,
          [],
        ),
        returnValue: _i5.Future<_i3.Faceting>.value(_FakeFaceting_14(
          this,
          Invocation.method(
            #getFaceting,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Faceting>);

  @override
  _i5.Future<_i3.Task> resetFaceting() => (super.noSuchMethod(
        Invocation.method(
          #resetFaceting,
          [],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #resetFaceting,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.Task> updateFaceting(_i3.Faceting? faceting) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateFaceting,
          [faceting],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #updateFaceting,
            [faceting],
          ),
        )),
      ) as _i5.Future<_i3.Task>);

  @override
  _i5.Future<_i3.IndexStats> getStats() => (super.noSuchMethod(
        Invocation.method(
          #getStats,
          [],
        ),
        returnValue: _i5.Future<_i3.IndexStats>.value(_FakeIndexStats_15(
          this,
          Invocation.method(
            #getStats,
            [],
          ),
        )),
      ) as _i5.Future<_i3.IndexStats>);

  @override
  _i5.Future<_i3.TasksResults> getTasks({_i3.TasksQuery? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTasks,
          [],
          {#params: params},
        ),
        returnValue: _i5.Future<_i3.TasksResults>.value(_FakeTasksResults_6(
          this,
          Invocation.method(
            #getTasks,
            [],
            {#params: params},
          ),
        )),
      ) as _i5.Future<_i3.TasksResults>);

  @override
  _i5.Future<_i3.Task> getTask(int? uid) => (super.noSuchMethod(
        Invocation.method(
          #getTask,
          [uid],
        ),
        returnValue: _i5.Future<_i3.Task>.value(_FakeTask_2(
          this,
          Invocation.method(
            #getTask,
            [uid],
          ),
        )),
      ) as _i5.Future<_i3.Task>);
}

/// A class which mocks [Searcheable].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearcheable<T> extends _i1.Mock implements _i3.Searcheable<T> {
  MockSearcheable() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<String, dynamic> get src => (super.noSuchMethod(
        Invocation.getter(#src),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  String get indexUid => (super.noSuchMethod(
        Invocation.getter(#indexUid),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#indexUid),
        ),
      ) as String);

  @override
  List<T> get hits => (super.noSuchMethod(
        Invocation.getter(#hits),
        returnValue: <T>[],
      ) as List<T>);

  @override
  _i3.Searcheable<TOther> map<TOther>(
          _i3.MeilisearchDocumentMapper<T, TOther>? mapper) =>
      (super.noSuchMethod(
        Invocation.method(
          #map,
          [mapper],
        ),
        returnValue: _FakeSearcheable_9<TOther>(
          this,
          Invocation.method(
            #map,
            [mapper],
          ),
        ),
      ) as _i3.Searcheable<TOther>);

  @override
  _i3.PaginatedSearchResult<T> asPaginatedResult() => (super.noSuchMethod(
        Invocation.method(
          #asPaginatedResult,
          [],
        ),
        returnValue: _FakePaginatedSearchResult_16<T>(
          this,
          Invocation.method(
            #asPaginatedResult,
            [],
          ),
        ),
      ) as _i3.PaginatedSearchResult<T>);

  @override
  _i3.SearchResult<T> asSearchResult() => (super.noSuchMethod(
        Invocation.method(
          #asSearchResult,
          [],
        ),
        returnValue: _FakeSearchResult_17<T>(
          this,
          Invocation.method(
            #asSearchResult,
            [],
          ),
        ),
      ) as _i3.SearchResult<T>);
}
